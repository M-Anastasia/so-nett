{"version":3,"sources":["components/card/card.module.css","components/card/tense/tense.tsx","components/card/card-front/card-front.tsx","components/card/card-back/card-back.tsx","containers/card/card-back.tsx","components/card/card.tsx","api/fetcher.tsx","components/main/main.tsx","containers/main/main.tsx","App.tsx","reportWebVitals.ts","data/test_data.tsx","reducer/reducer.tsx","store/store.tsx","i18n.js","index.tsx","components/main/main.module.css"],"names":["module","exports","Tense","props","useState","tenseColor","setTenseColor","useEffect","tense","className","s","style","content","position","top","left","right","bottom","filter","zIndex","background","CardFront","onClick","changeIsChecked","card","pronoun","CardBack","cardBackRef","useRef","refVerbCont","refVerb","backToFullSize","setFontSize","cardBack","conjugation","isCardChecked","current","visibility","nextCardIndex","cardsRead","setCardData","testData","setTimeout","setCardBackData","incCardsRead","ref","fontSize","connect","state","fontSizeReducer","dispatch","type","connector","CardBackComponent","Card","checkBoxRef","getConjugations","a","fetch","url","method","then","response","json","Main","t","useTranslation","res","console","log","setTestData","resetCardsRead","length","onKeyPress","e","code","checked","tabIndex","verb","testDataReducer","cardsReadReducer","cardReducer","cardBackReducer","inputCheckedReducer","index","MainComponent","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TestData","translation","reducer","combineReducers","action","Math","round","clientWidth","store","createStore","i18n","use","initReactI18next","init","resources","en","lng","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fd2045b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card_card__1py-W\",\"card-front\":\"card_card-front__UpM74\",\"card-back\":\"card_card-back__3vF1x\",\"card-pronoun\":\"card_card-pronoun__3EIjT\",\"card-verb-container\":\"card_card-verb-container__2kGIv\",\"card-tens-container\":\"card_card-tens-container__lZK9p\",\"card-verb\":\"card_card-verb__3EQOr\",\"card-conjugation\":\"card_card-conjugation__2xg5u\"};","import React, {useEffect, useState} from \"react\";\nimport s from \"../card.module.css\";\n\nconst Tense = (props: { tense: string }) => {\n\n    const [tenseColor, setTenseColor] = useState(\"rgba(175, 216, 242, 0.25)\");\n\n    useEffect(() => {\n        if (props.tense === 'Präsens') {\n            setTenseColor(\"rgba(162, 59, 114, 0.35)\")\n        } else if (props.tense === 'Präteritum') {\n            setTenseColor(\"rgba(241, 143, 1, 0.35)\")\n        } else if (props.tense === 'Perfekt') {\n            setTenseColor(\"rgba(199, 62, 29, 0.35)\")\n        } else if (props.tense === 'Plusquamperfekt') {\n            setTenseColor(\"rgba(97, 11, 78, 0.35)\")\n        }\n    }, [props.tense])\n\n    return (\n        <div className={s[\"card-tens-container\"]}>\n            <div style={{\n                content: '',\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                filter: 'blur(4px)',\n                zIndex: 0,\n                background: tenseColor\n            }}/>\n            <p className={s[\"card-conjugation\"]}>{props.tense}</p>\n        </div>\n    )\n};\n\nexport default Tense;","import React from \"react\";\nimport s from \"../card.module.css\";\nimport {PropsCard} from \"../../../containers/main/main\";\nimport Tense from \"../tense/tense\";\n\nconst CardFront = (props: PropsCard) => {\n\n    const handleCardFrontClick = () => {\n        props.changeIsChecked();\n    }\n\n    return (\n        <div className={s[\"card-front\"]} onClick={handleCardFrontClick}>\n            <p className={s[\"card-pronoun\"]}>{props.card.pronoun}</p>\n            <div className={s[\"card-verb-container\"]}/>\n            <Tense tense={props.card.tense}/>\n        </div>\n    );\n};\n\nexport default CardFront;","import React, {useEffect, useRef} from \"react\";\nimport s from \"../card.module.css\";\nimport {PropsFont} from \"../../../containers/card/card-back\";\nimport {PropsCard} from \"../../../containers/main/main\";\nimport Tense from \"../tense/tense\";\n\nconst CardBack = (props: PropsCard & PropsFont) => {\n\n    const cardBackRef = useRef<HTMLDivElement>(null);\n    const refVerbCont = useRef<HTMLDivElement>(null);\n    const refVerb = useRef<HTMLParagraphElement>(null);\n\n    useEffect(() => {\n        props.backToFullSize();\n        props.setFontSize(refVerbCont, refVerb);\n    }, [props.cardBack.conjugation]);\n\n    useEffect(() => {\n        if (!props.isCardChecked) {\n            cardBackRef.current!.style.visibility = 'hidden';\n            const nextCardIndex = props.cardsRead;\n            props.setCardData(nextCardIndex, props.testData);\n            cardBackRef.current!.style.visibility = 'visible';\n            setTimeout(() => {\n                props.setCardBackData(nextCardIndex, props.testData);\n                props.incCardsRead();\n            }, 500);\n        }\n    }, [props.isCardChecked])\n\n    const handleCardBackClick = () => {\n        props.changeIsChecked();\n    }\n\n    return (\n        <div ref={cardBackRef} className={s[\"card-back\"]} onClick={handleCardBackClick}>\n            <p className={s[\"card-pronoun\"]}>{props.cardBack.pronoun}</p>\n            <div className={s[\"card-verb-container\"]} ref={refVerbCont}>\n                <p ref={refVerb} className={s[\"card-verb\"]}\n                   style={{fontSize: props.fontSize}}>{props.cardBack.conjugation}</p>\n            </div>\n            <Tense tense={props.cardBack.tense}/>\n        </div>\n    );\n}\n\nexport default CardBack;","import {connect, ConnectedProps} from \"react-redux\";\nimport CardBackComponent from \"../../components/card/card-back/card-back\";\nimport {RefObject} from \"react\";\nimport {AppDispatch, IReducer} from \"../../interfaces/interfaces\";\n\nconst mapStateToProps = (state: IReducer) => {\n    return {\n        fontSize: state.fontSizeReducer\n    };\n};\nconst mapDispatchToProps = (dispatch: AppDispatch) => {\n    return {\n        setFontSize: (refVerbCont: RefObject<HTMLDivElement>, refVerb: RefObject<HTMLParagraphElement>) => dispatch({\n            type: 'SET_FONT_SIZE',\n            refVerbCont: refVerbCont,\n            refVerb: refVerb\n        }),\n        backToFullSize: () => dispatch({type: 'BACK_TO_FULL_SIZE'})\n    }\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport type PropsFont = ConnectedProps<typeof connector>\nexport const CardBack = connector(CardBackComponent);","import React, {RefObject} from 'react';\nimport s from './card.module.css';\nimport CardFront from \"./card-front/card-front\";\nimport {CardBack} from \"../../containers/card/card-back\";\nimport {PropsCard} from \"../../containers/main/main\";\n\nconst Card = (props: PropsCard & { checkBoxRef: RefObject<HTMLInputElement> }) => {\n\n    return (\n        <label>\n            <input type=\"checkbox\" ref={props.checkBoxRef}/>\n            <div className={s[\"card\"]}>\n                <CardFront {...props}/>\n                <CardBack {...props}/>\n            </div>\n        </label>\n    )\n}\n\nexport default Card;","const url = \"https://217.25.90.89/api\"\n\nexport const getConjugations = async () => {\n    return await fetch(url + '/conjugations/100', {\n        method: 'GET'\n    }).then(response => response.json());\n}\n","import s from \"./main.module.css\";\nimport Card from \"../card/card\";\nimport React, {useEffect, useRef} from \"react\";\nimport {PropsCard} from \"../../containers/main/main\";\nimport {getConjugations} from \"../../api/fetcher\";\nimport {useTranslation} from 'react-i18next';\n\nconst Main = (props: PropsCard) => {\n\n    const {t} = useTranslation();\n\n    const checkBoxRef = useRef<HTMLInputElement>(null);\n\n    const handleSpacePress = (e: React.KeyboardEvent<HTMLDivElement>) => {\n        if (e.code === 'Space') {\n            checkBoxRef.current!.checked = !checkBoxRef.current!.checked;\n            props.changeIsChecked();\n        }\n    }\n\n    useEffect(() => {\n        getConjugations().then((res) => {\n            console.log(res);\n            props.setTestData(res);\n            props.resetCardsRead();\n        })\n    }, [props.cardsRead === props.testData.length])\n\n    return (\n        <div onKeyPress={handleSpacePress} tabIndex={0} className={s[\"trainer\"]}>\n            <div className={s[\"trainer-word-container\"]}>\n                <p className={s[\"trainer-word\"]}>{props.card.verb}</p>\n                <p className={s[\"trainer-word-translation\"]}>{t(props.card.verb)}</p>\n            </div>\n            <div className={s[\"trainer-card\"]}>\n                <Card {...props} checkBoxRef={checkBoxRef}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Main;","import {connect, ConnectedProps} from \"react-redux\";\nimport MainComponent from \"../../components/main/main\";\nimport {AppDispatch, IReducer, ITestDataCard, ITestDataHead} from \"../../interfaces/interfaces\";\n\nconst mapStateToProps = (state: IReducer) => {\n    return {\n        testData: state.testDataReducer,\n        cardsRead: state.cardsReadReducer,\n        card: state.cardReducer,\n        cardBack: state.cardBackReducer,\n        isCardChecked: state.inputCheckedReducer\n    };\n};\nconst mapDispatchToProps = (dispatch: AppDispatch) => {\n    return {\n        setTestData: (testData: Array<ITestDataHead & ITestDataCard>) => dispatch({type: 'SET_TEST_DATA', testData: testData}),\n        incCardsRead: () => dispatch({type: 'INC_CARDS_READ'}),\n        resetCardsRead: () => dispatch({type: 'BACK_TO_START'}),\n        setCardData: (index: number, testData: Array<ITestDataHead & ITestDataCard>) => dispatch({type: 'GET_NEXT_DATA', index: index, testData: testData}),\n        setCardBackData: (index: number, testData: Array<ITestDataHead & ITestDataCard>) => dispatch({type: 'SET_CARD_BACK_DATA', index: index, testData: testData}),\n        changeIsChecked: () => dispatch({type: 'CHANGE_IS_CHECKED'})\n    }\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport type PropsCard = ConnectedProps<typeof connector>\nexport const Main = connector(MainComponent);","import React from 'react';\nimport './styles.module.css';\nimport {Main} from \"./containers/main/main\";\n\nfunction App() {\n    return (\n        <Main/>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ITestDataCard, ITestDataHead} from '../interfaces/interfaces';\n\nconst TestData: Array<ITestDataHead & ITestDataCard> = [\n    {\n        verb: 'sein',\n        translation: 'to be',\n        tense: 'Präsens',\n        pronoun: 'ich',\n        conjugation: 'bin',\n    },\n    {\n        verb: 'sein',\n        translation: 'to be',\n        tense: 'Präsens',\n        pronoun: 'du',\n        conjugation: 'bist',\n    },\n    {\n        verb: 'sein',\n        translation: 'to be',\n        tense: 'Präsens',\n        pronoun: 'er/sie/es',\n        conjugation: 'ist',\n    },\n    {\n        verb: 'sein',\n        translation: 'to be',\n        tense: 'Präsens',\n        pronoun: 'wir',\n        conjugation: 'sind',\n    },\n    {\n        verb: 'sein',\n        translation: 'to be',\n        tense: 'Präsens',\n        pronoun: 'ihr',\n        conjugation: 'seid',\n    },\n    {\n        verb: 'sein',\n        translation: 'to be',\n        tense: 'Präsens',\n        pronoun: 'sie/Sie',\n        conjugation: 'sind',\n    },\n\n    {\n        verb: 'haben',\n        translation: 'to have',\n        tense: 'Präsens',\n        pronoun: 'ich',\n        conjugation: 'habe',\n    },\n    {\n        verb: 'haben',\n        translation: 'to have',\n        tense: 'Präsens',\n        pronoun: 'du',\n        conjugation: 'hast',\n    },\n    {\n        verb: 'haben',\n        translation: 'to have',\n        tense: 'Präsens',\n        pronoun: 'er/sie/es',\n        conjugation: 'hat',\n    },\n    {\n        verb: 'haben',\n        translation: 'to have',\n        tense: 'Präsens',\n        pronoun: 'wir',\n        conjugation: 'haben',\n    },\n    {\n        verb: 'haben',\n        translation: 'to have',\n        tense: 'Präsens',\n        pronoun: 'ihr',\n        conjugation: 'habt',\n    },\n    {\n        verb: 'haben',\n        translation: 'to have',\n        tense: 'Präsens',\n        pronoun: 'sie/Sie',\n        conjugation: 'haben',\n    },\n\n    {\n        verb: 'werden',\n        translation: 'to become',\n        tense: 'Präsens',\n        pronoun: 'ich',\n        conjugation: 'werde',\n    },\n    {\n        verb: 'werden',\n        translation: 'to become',\n        tense: 'Präsens',\n        pronoun: 'du',\n        conjugation: 'wirst',\n    },\n    {\n        verb: 'werden',\n        translation: 'to become',\n        tense: 'Präsens',\n        pronoun: 'er/sie/es',\n        conjugation: 'wird',\n    },\n    {\n        verb: 'werden',\n        translation: 'to become',\n        tense: 'Präsens',\n        pronoun: 'wir',\n        conjugation: 'werden',\n    },\n    {\n        verb: 'werden',\n        translation: 'to become',\n        tense: 'Präsens',\n        pronoun: 'ihr',\n        conjugation: 'werdet',\n    },\n    {\n        verb: 'werden',\n        translation: 'to become',\n        tense: 'Präsens',\n        pronoun: 'sie/Sie',\n        conjugation: 'werden',\n    },\n\n    {\n        verb: 'können',\n        translation: 'can, to be able to',\n        tense: 'Präsens',\n        pronoun: 'ich',\n        conjugation: 'kann',\n    },\n    {\n        verb: 'können',\n        translation: 'can, to be able to',\n        tense: 'Präsens',\n        pronoun: 'du',\n        conjugation: 'kannst',\n    },\n    {\n        verb: 'können',\n        translation: 'can, to be able to',\n        tense: 'Präsens',\n        pronoun: 'er/sie/es',\n        conjugation: 'kann',\n    },\n    {\n        verb: 'können',\n        translation: 'can, to be able to',\n        tense: 'Präsens',\n        pronoun: 'wir',\n        conjugation: 'können',\n    },\n    {\n        verb: 'können',\n        translation: 'can, to be able to',\n        tense: 'Präsens',\n        pronoun: 'ihr',\n        conjugation: 'könnt',\n    },\n    {\n        verb: 'können',\n        translation: 'can, to be able to',\n        tense: 'Präsens',\n        pronoun: 'sie/Sie',\n        conjugation: 'können',\n    },\n\n    {\n        verb: 'müssen',\n        translation: 'must, to have to',\n        tense: 'Präsens',\n        pronoun: 'ich',\n        conjugation: 'muss',\n    },\n    {\n        verb: 'müssen',\n        translation: 'must, to have to',\n        tense: 'Präsens',\n        pronoun: 'du',\n        conjugation: 'musst',\n    },\n    {\n        verb: 'müssen',\n        translation: 'must, to have to',\n        tense: 'Präsens',\n        pronoun: 'er/sie/es',\n        conjugation: 'muss',\n    },\n    {\n        verb: 'müssen',\n        translation: 'must, to have to',\n        tense: 'Präsens',\n        pronoun: 'wir',\n        conjugation: 'müssen',\n    },\n    {\n        verb: 'müssen',\n        translation: 'must, to have to',\n        tense: 'Präsens',\n        pronoun: 'ihr',\n        conjugation: 'müsst',\n    },\n    {\n        verb: 'müssen',\n        translation: 'must, to have to',\n        tense: 'Präsens',\n        pronoun: 'sie/Sie',\n        conjugation: 'müssen',\n    },\n]\n\nexport default TestData;","import TestData from \"../data/test_data\";\nimport {AnyAction, combineReducers} from \"redux\";\n\nconst testDataReducer = function (state = TestData, action: AnyAction) {\n    switch (action.type) {\n        case \"SET_TEST_DATA\":\n            return action.testData;\n        default:\n            return state;\n    }\n}\n\nconst cardsReadReducer = function (state = 0, action: AnyAction) {\n    switch (action.type) {\n        case \"INC_CARDS_READ\":\n            return state + 1;\n        case \"BACK_TO_START\":\n            return 0;\n        default:\n            return state;\n    }\n}\n\nconst cardReducer = function (state = TestData[0], action: AnyAction) {\n    switch (action.type) {\n        case \"GET_NEXT_DATA\":\n            return action.testData[action.index];\n        default:\n            return state;\n    }\n};\n\nconst cardBackReducer = function (state = TestData[0], action: AnyAction) {\n    switch (action.type) {\n        case \"SET_CARD_BACK_DATA\":\n            return action.testData[action.index];\n        default:\n            return state;\n    }\n};\n\nconst inputCheckedReducer = function (state = false, action: AnyAction) {\n    switch (action.type) {\n        case \"CHANGE_IS_CHECKED\":\n            return !state;\n        default:\n            return state;\n    }\n}\n\nconst fontSizeReducer = function (state = '', action: AnyAction) {\n    switch (action.type) {\n        case \"BACK_TO_FULL_SIZE\":\n            return '100%';\n        case \"SET_FONT_SIZE\":\n            return `${Math.round((action.refVerbCont.current!.clientWidth / action.refVerb.current!.clientWidth) * 100) - 2}%`;\n        default:\n            return state;\n    }\n};\n\nexport const reducer = combineReducers({\n    testDataReducer,\n    cardsReadReducer,\n    cardReducer,\n    fontSizeReducer,\n    cardBackReducer,\n    inputCheckedReducer\n})","import {createStore} from \"redux\";\nimport {reducer} from \"../reducer/reducer\";\n\nexport const store = createStore(reducer);","import i18n from \"i18next\";\nimport {initReactI18next} from \"react-i18next\";\n\nconst resources = {\n    en: {\n        translation: {\n            \"sein\": \"to be\",\n            \"haben\": \"to have\",\n            \"werden\": \"to become\",\n            \"können\": \"can, to be able to\",\n            \"müssen\": \"must, to have to\",\n            \"anbieten\": \"to offer\",\n            \"ändern\": \"to change\",\n            \"anfangen\": \"to start\",\n            \"ansehen\": \"to watch\",\n            \"antworten\": \"to answer\",\n            \"arbeiten\": \"to work\",\n            \"aussehen\": \"to look\",\n            \"bedeuten\": \"to mean\",\n            \"beginnen\": \"to start\",\n            \"bekommen\": \"to receive\",\n            \"bestellen\": \"to order\",\n            \"besuchen\": \"to visit\",\n            \"betreffen\": \"to concern\",\n            \"bieten\": \"to offer\",\n            \"bilden\": \"to form\",\n            \"bleiben\": \"to stay\",\n            \"brauchen\": \"to need\",\n            \"bringen\": \"to bring\",\n            \"danken\": \"to thank\",\n            \"denken\": \"to think\",\n            \"dürfen\": \"may, to be allowed to\",\n            \"entwickeln\": \"to develop\",\n            \"ergeben\": \"result\",\n            \"erinnern\": \"to remind\",\n            \"erkennen\": \"to recognize\",\n            \"erklären\": \"to explain\",\n            \"erreichen\": \"to reach\",\n            \"erscheinen\": \"to appear\",\n            \"erwarten\": \"to expect\",\n            \"essen\": \"to eat\",\n            \"fahren\": \"to travel\",\n            \"finden\": \"to find\",\n            \"folgen\": \"to follow\",\n            \"fragen\": \"to ask\",\n            \"fühlen\": \"to feel\",\n            \"führen\": \"to lead\",\n            \"geben\": \"to give\",\n            \"gehen\": \"to walk\",\n            \"gehören\": \"to belong\",\n            \"gewinnen\": \"to win\",\n            \"glauben\": \"to believe\",\n            \"halten\": \"to keep\",\n            \"handeln\": \"to act\",\n            \"heißen\": \"to mean\",\n            \"helfen\": \"to help\",\n            \"hören\": \"to hear\",\n            \"interessieren\": \"to interest\",\n            \"kaufen\": \"to buy\",\n            \"kennen\": \"to know\",\n            \"kommen\": \"to come\",\n            \"lachen\": \"to laugh\",\n            \"lassen\": \"to permit\",\n            \"laufen\": \"to run\",\n            \"leben\": \"to live\",\n            \"legen\": \"to place\",\n            \"lernen\": \"to learn\",\n            \"lesen\": \"to read\",\n            \"lieben\": \"to love\",\n            \"liegen\": \"to lie\",\n            \"machen\": \"to do\",\n            \"meinen\": \"to say\",\n            \"mögen\": \"to like\",\n            \"nehmen\": \"to take\",\n            \"nennen\": \"to name\",\n            \"öffnen\": \"to open\",\n            \"reden\": \"to talk\",\n            \"reisen\": \"to travel\",\n            \"rennen\": \"to run\",\n            \"riechen\": \"to smell\",\n            \"sagen\": \"to say\",\n            \"schaffen\": \"to create\",\n            \"scheinen\": \"to seem\",\n            \"schlafen\": \"to sleep\",\n            \"schließen\": \"to close\",\n            \"schmecken\": \"to taste\",\n            \"schreiben\": \"to write\",\n            \"sehen\": \"to see\",\n            \"senden\": \"to send\",\n            \"setzen\": \"to set\",\n            \"singen\": \"to sing\",\n            \"sitzen\": \"to sit\",\n            \"sollen\": \"to should\",\n            \"spielen\": \"to play\",\n            \"sprechen\": \"to speak\",\n            \"stehen\": \"to stand\",\n            \"stellen\": \"to place\",\n            \"studieren\": \"to study\",\n            \"suchen\": \"to look for\",\n            \"teilen\": \"to share\",\n            \"tragen\": \"to wear\",\n            \"treffen\": \"to meet\",\n            \"trinken\": \"to drink\",\n            \"tun\": \"to do\",\n            \"verbinden\": \"to associate\",\n            \"verlassen\": \"to leaving\",\n            \"verlieren\": \"to lose\",\n            \"verstehen\": \"to understand\",\n            \"versuchen\": \"to try\",\n            \"verwenden\": \"to use\",\n            \"warten\": \"to wait\",\n            \"wissen\": \"to know\",\n            \"wohnen\": \"to reside\",\n            \"wollen\": \"to want\",\n            \"zählen\": \"to counting\",\n            \"zeigen\": \"to demonstrate\",\n            \"ziehen\": \"todraw\",\n        }\n    }\n};\ni18n\n    .use(initReactI18next)\n    .init({\n        resources,\n        lng: \"en\",\n        interpolation: {\n            escapeValue: false\n        }\n    });\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\nimport './i18n';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your main, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trainer\":\"main_trainer__2gB_T\",\"trainer-word-container\":\"main_trainer-word-container__1D88r\",\"trainer-word\":\"main_trainer-word__3vUwO\",\"trainer-word-translation\":\"main_trainer-word-translation__3ATwH\",\"trainer-card\":\"main_trainer-card__1jEDA\"};"],"sourceRoot":""}